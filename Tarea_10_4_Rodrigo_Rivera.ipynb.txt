{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "2f1c59bf-2364-4508-932d-c7f5cb62c471",
      "metadata": {
        "id": "2f1c59bf-2364-4508-932d-c7f5cb62c471"
      },
      "source": [
        "## Tarea 10.4\n",
        "\n",
        "Calcule la siguiente integral\n",
        "\n",
        "$$\n",
        "\\int_1^\\infty dx\\,\\int_1^\\infty dy\\, \\frac{\\tan^{-1}(xy)}{y^2 (x^{3/2}+1)}\n",
        "$$\n",
        "\n",
        "**Pista:** La $\\tan^{-1}(x)$ tiende a una constante cuando $x \\rightarrow \\infty$ tal que al aislar la divergencia, se puede reemplazar por la constante."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "id": "106e0f0b-95ed-422e-928e-90e3d700e609",
      "metadata": {
        "id": "106e0f0b-95ed-422e-928e-90e3d700e609"
      },
      "outputs": [],
      "source": [
        "# Primero se programa la cuadratura gaussiana\n",
        "\n",
        "import numpy as np \n",
        "\n",
        "def gauss_quad_5(f, a, b):\n",
        "\n",
        "  '''\n",
        "  Esta función implementa el método de cuadratura adaptativa.\n",
        "  '''\n",
        "    \n",
        "  def x(t):\n",
        "      return ((b - a)*t + a + b)/2\n",
        "    \n",
        "  c = [0.2369268850, 0.4786286705, 0.5688888889, 0.4786286705, 0.2369268850]\n",
        "  r = [0.9061798459, 0.5384693101, 0.0000000000, -0.5384693101, -0.9061798459]\n",
        "    # se definen una serie de listas con distribución gaussiana.\n",
        "    \n",
        "  return ((b-a)/2)*sum(c[i]*f(x(r[i])) for i in range(5))\n",
        "\n",
        "\n",
        "# y la función que queremos calcularle la integral.\n",
        "\n",
        "def f(x,y):\n",
        "  '''\n",
        "  Esta es la función que vamos a integrar\n",
        "  '''\n",
        "  tol = float(\"inf\")\n",
        "  if x*y == tol:\n",
        "    return 0\n",
        "  else:\n",
        "    return np.arctan(x*y)/(y**(2)*(x**(3/2) + 1))  \n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Esto es lo que hice, no hice más porque no se me ocurrio más que hacer."
      ],
      "metadata": {
        "id": "f5d4A9x6xySd"
      },
      "id": "f5d4A9x6xySd"
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "d0mY8lCM7MVX"
      },
      "id": "d0mY8lCM7MVX",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.12"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}